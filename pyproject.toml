[project]
name = "konseho"
version = "0.1.0"
description = "Multi-agent council framework built on Strands Agents SDK"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "strands-agents>=0.1.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "typing-extensions>=4.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "black>=24.0.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "pre-commit>=3.5.0",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",     # pycodestyle errors
    "F",     # pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "PT",    # flake8-pytest-style
    "SIM",   # flake8-simplify
    "RUF",   # Ruff-specific rules
    "TCH",   # flake8-type-checking
    "TID",   # flake8-tidy-imports
    "PTH",   # flake8-use-pathlib
    "PD",    # pandas-vet
    "PGH",   # pygrep-hooks
    "PL",    # pylint
    "PIE",   # flake8-pie
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "RSE",   # flake8-raise
    "ANN",   # flake8-annotations
    "ARG",   # flake8-unused-arguments
    "FBT",   # flake8-boolean-trap
    "C90",   # mccabe complexity
    "ERA",   # eradicate
    "PYI",   # flake8-pyi
]
ignore = [
    "ANN101",  # Missing type annotation for self
    "ANN102",  # Missing type annotation for cls
    "ANN401",  # Dynamically typed expressions (Any)
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.per-file-ignores]
"tests/*" = ["ANN", "ARG", "FBT", "PLR2004", "S101"]
"examples/*" = ["ANN", "T20"]

[tool.ruff.isort]
known-first-party = ["konseho"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_any_decorated = true
disallow_any_explicit = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
strict_concatenate = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[dependency-groups]
dev = [
    "pytest-asyncio>=1.0.0",
]
